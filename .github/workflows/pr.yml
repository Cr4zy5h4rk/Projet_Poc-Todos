name: Build-Analyze
on:
  pull_request:
    types: [opened, synchronize, reopened]

  push:
    branches:
      - main

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "zulu"

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Dependencies Scan
        if: 1 > 2
        run: mvn clean verify -DskipTests -Pcve

      - name: Unit Testing
        run: mvn test -Put

      - name: Integration Testing
        run: mvn test -Pit

      - name: Quality Gate
        run: mvn clean verify sonar:sonar -Dsonar.organization=mlndiaye -Dsonar.host.url=https://sonarcloud.io -Dsonar.token=${{ secrets.SONAR_TOKEN }} -Dsonar.projectKey=mlndiaye_AgiliteProject_Grpe_3

      - name: Check Quality Gate
        id: check_quality_gate
        run: |
          echo "Checking if quality gate is met ..."
          SONAR_PROJECT_KEY="mlndiaye_AgiliteProject_Grpe_3"
          SONAR_HOST_URL="https://sonarcloud.io"
          SONAR_TOKEN="${{ secrets.SONAR_TOKEN }}"

          status="IN_PROGRESS"
          attempt_counter=0
          max_attempts=10

          while [[ "$status" != "OK" && "$status" != "ERROR" && $attempt_counter -lt $max_attempts ]]; do
            sleep 10
            response=$(curl -s -u $SONAR_TOKEN: "$SONAR_HOST_URL/api/qualitygates/project_status?projectKey=$SONAR_PROJECT_KEY")
            status=$(echo $response | jq -r '.projectStatus.status')
            attempt_counter=$((attempt_counter+1))
          done

          if [[ "$status" != "OK" ]]; then
            echo "Quality Gate failed"
            echo "$response" | jq
            exit 1
          else
            echo "Quality Gate passed"
          fi